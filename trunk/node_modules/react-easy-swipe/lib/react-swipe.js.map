{"version":3,"sources":["react-swipe.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MACqB,UAAU;cAAV,UAAU;;aAAV,UAAU;4BAAV,UAAU;;oEAAV,UAAU;;;iBAAV,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAAV,UAAU;;;AAAV,YAAU;;;;;;;;;;;;;AAAV,YAAU;;;;;;;;;;oBAAV,UAAU","file":"react-swipe.js","sourcesContent":["import React from 'react';\nexport default class ReactSwipe extends React.Component {\n  static propTypes = {\n    tagName: React.PropTypes.string,\n    className: React.PropTypes.string,\n    style: React.PropTypes.object,\n    children: React.PropTypes.node,\n    onSwipeUp: React.PropTypes.func,\n    onSwipeDown: React.PropTypes.func,\n    onSwipeLeft: React.PropTypes.func,\n    onSwipeRight: React.PropTypes.func,\n    onSwipeStart: React.PropTypes.func,\n    onSwipeMove: React.PropTypes.func,\n    onSwipeEnd: React.PropTypes.func\n  }\n\n  static defaultProps = {\n    tagName: 'div',\n    onSwipeUp() {},\n    onSwipeDown() {},\n    onSwipeLeft() {},\n    onSwipeRight() {},\n    onSwipeStart() {},\n    onSwipeMove() {},\n    onSwipeEnd() {}\n  }\n\n  _handleSwipeStart(e) {\n    const { pageX, pageY } = e.touches[0];\n    this.touchStart = { pageX, pageY };\n    this.props.onSwipeStart();\n  }\n\n  _handleSwipeMove(e) {\n    e.preventDefault();\n    const deltaX = e.touches[0].pageX - this.touchStart.pageX;\n    const deltaY = e.touches[0].pageY - this.touchStart.pageY;\n    this.swiping = true;\n    this.props.onSwipeMove({\n      x: deltaX,\n      y: deltaY\n    });\n    this.touchPosition = { deltaX, deltaY };\n  }\n\n  _handleSwipeEnd() {\n    if (this.swiping) {\n      if (this.touchPosition.deltaX < 0) {\n        this.props.onSwipeLeft(1);\n      } else if (this.touchPosition.deltaX > 0) {\n        this.props.onSwipeRight(1);\n      }\n      if (this.touchPosition.deltaY < 0) {\n        this.props.onSwipeDown(1);\n      } else if (this.touchPosition.deltaY > 0) {\n        this.props.onSwipeUp(1);\n      }\n    }\n    this.props.onSwipeEnd();\n    this.touchStart = null;\n    this.swiping = false;\n    this.touchPosition = null;\n  }\n\n  render() {\n    return (\n      <this.props.tagName\n        onTouchMove = { this._handleSwipeMove }\n        onTouchStart = { this._handleSwipeStart }\n        onTouchEnd = { this._handleSwipeEnd }\n        className = { this.props.className }\n        style = { this.props.style }\n      >\n\n        { this.props.children }\n\n      </this.props.tagName>\n    );\n  }\n}\n"],"sourceRoot":"/source/"}